services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    hostname: gluetun
    platform: linux/arm64/v8
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=windscribe
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${WIND_USERNAME}
      - OPENVPN_PASSWORD=${WIND_PASSWORD}
      - SERVER_REGIONS=${WIND_REGIONS}
      - TZ=Australia/Sydney
      - FIREWALL=on
      - FIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24
      - DNS_PORT=${DNS_PORT}
    volumes:
      - ${GLUETUN_VOLUME}:${GLUETUN_MOUNT}
    ports:
      - "${DNS_PORT}:${DNS_PORT}/tcp"
      - "${DNS_PORT}:${DNS_PORT}/udp"
    restart: unless-stopped

  windows:
    image: ${WINDOWS_IMAGE}
    container_name: windows
    hostname: ${WINDOWS_HOSTNAME}
    environment:
      - VERSION=${WINDOWS_VERSION}
      - VM_NET_DEV=eth0
    devices:
      - ${KVM_DEVICE}
      - ${TUN_DEVICE}
    cap_add:
      - NET_ADMIN
    volumes:
      - ${WINDOWS_VOLUME}:${WINDOWS_MOUNT}
    restart: unless-stopped
    stop_grace_period: ${STOP_GRACE_PERIOD}
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy

  windows-bridge:
    image: alpine
    container_name: windows-bridge
    entrypoint: ["/bin/sh", "-c"]
    command: |
      apk add --no-cache docker-cli &&
      until docker network connect --ip 192.168.1.225 macvlan_network windows 2>/dev/null; do
        echo "⏳ Waiting for windows to be ready..."
        sleep 1
      done &&
      echo "✅ Connected windows to macvlan" &&
      sleep infinity
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure

networks:
  macvlan_network:
    external: true